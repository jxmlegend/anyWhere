///@file MenuSetting.h
//==============================================================================
//
//  File        : MenuSetting.h
//  Description : INCLUDE File for the Menu Setting function porting.
//  Author      :
//  Revision    : 1.0
//
//==============================================================================

#ifndef _MENUSETTING_H_
#define _MENUSETTING_H_

/*===========================================================================
 * Include file
 *===========================================================================*/
#if !defined(_BUILD_SDK_LIB_) && !defined(_NET_SDK_)
#include "Customer_Config.h"
#endif

#include "AHC_Audio.h"
#include "config_fw.h"

/*===========================================================================
 * Macro define
 *===========================================================================*/

#define MENU_DIR_KEY_NUM (4) //1:MENU_CIRCLE. 2:MENU_UP\MENU_DOWN. 4:MENU_UP\MENU_DOWN\MENU_LEFT\MENU_RIGHT

/*===========================================================================
 * Structure define
 *===========================================================================*/
/* Don't Add new item anymore, if you want to do, please add new item in MENU_ATOMS */
typedef struct _MenuInfo
{
// Still
    UINT8 uiIMGSize;			// 0
    UINT8 uiIMGQuality;
    UINT8 uiIMGStabilize;
    UINT8 uiFlashMode;
    UINT8 uiFlashLevel;
    UINT8 uiRedEyeReduce;		// 5
    UINT8 uiSelfTimer;
    UINT8 uiBurstShot;
// Movie
    UINT8 uiMOVSize;
    UINT8 uiMOVQuality;
    UINT8 uiMOVStabilize;		// 10
    UINT8 uiSlowShutter;
    UINT8 uiMicSensitivity;
    UINT8 uiMOVPreRecord;
    UINT8 uiMOVClipTime;
    UINT8 uiMOVPowerOffTime;	// 15
    UINT8 uiMOVSoundRecord;
// Manual
    UINT8 uiScene ;
    UINT8 uiFocus;
    UINT8 uiFocusRange;
    UINT8 uiMetering;			// 20
    UINT8 uiEV;
    UINT8 uiISO;
    UINT8 uiWB;
    UINT8 uiColor;
    UINT8 uiEffect;				// 25
    UINT8 uiFaceTouch;
    UINT8 uiSmileDetect;
    UINT8 uiSmileSensitivity;
// Playback
    UINT8 uiSlideShowStart;
    UINT8 uiSlideShowFile;		// 30
    UINT8 uiSlideShowEffect;
    UINT8 uiSlideShowMusic;
    UINT8 uiVolume;
// Edit Tool
    UINT8 uiFileEdit;
// Media Tool
    UINT8 uiMediaSelect;      	// 35
    UINT8 uiDisplayInfo;
// General
    UINT8 uiBeep;
    UINT8 uiLCDBrightness;
    UINT8 uiAutoPowerOff;
    UINT8 uiDateTimeSetup;		// 40
    UINT8 uiDateTimeFormat;
    UINT8 uiLanguage ;
    UINT8 uiTVSystem;
    UINT8 uiTVType;
    UINT8 uiHDMIOutput;			// 45
    UINT8 uiResetSetting;
// Battery
	UINT8 uiBatteryVoltage;
	UINT8 uiFlickerHz;
	UINT8 uiUSBFunction;
	UINT8 uiLCDRotate;			// 50
	UINT8 uiLCDPowerSave;
	UINT8 uiLEDFlash;
	UINT8 uiGsensorSensitivity;
	UINT8 uiTimeZone;               //Time zone: Time difference*4 based on GMT time in hour.
									//15 minutes per unit.
	UINT8 uiDateLogoStamp;		// 55
	UINT8 uiMotionDtcSensitivity;
    UINT8 uiVMDRecTime;
    UINT8 uiVMDShotNum;
    UINT8 uiBootUpMode;
    UINT8 uiTimeLapseTime;		// 60
    UINT8 uiAutoRec;
    UINT8 uiGPSStamp;
    UINT8 uiSpeedStamp;
	UINT8 uiRecordGPS;
	UINT8 uiImageUpsideDown;    // 65
	UINT8 uiHDR; //adding for HDR function
	UINT8 uiWDR;
	INT16 touch_x;
	INT16 touch_y;
	INT16 touch_k1;
	INT16 touch_k2;
	INT8 touch_k3;
	UINT8 uiStatusLight;
	UINT8 uiWNR;
	UINT8 uiNightMode;
	/* For CarDV
	 * Please DON'T add or insert any member into the struct any more,
	 * New require, please add in MENU_ATOMS menu_atoms (HCarDV_MenuSetting.c)
	 */
} MenuInfo, *pMenuInfo;

/* Below SystemInfo is used for run time */
typedef struct _SystemInfo
{
// Still


// Movie
    UINT8 byStartNormalRecordAfterEmergencyRecord;

// Playback
    UINT8 byPlaybackVideoType;              // Video playback type, ex: Normal, Parking or Emergency videos


// Edit Tool


// Media Tool
    UINT8 byNeedToFormatMediaAsFormatFree;

// General


}SystemInfo, *pSystemInfo;


/*===========================================================================
 * Enum define
 *===========================================================================*/

typedef enum {
    VIDEOREC_MODE = 0 ,
    CAPTURE_MODE   ,
    SLIDESHOW_MODE ,
    JPGPB_MODE     ,
    MOVPB_MODE     ,
    AUDPB_MODE	   ,
    JPGPB_MOVPB_MODE ,
    DEFAULT_MODE
} OP_MODE_SETTING;

typedef enum {
#if (MENU_STILL_SIZE_30M_EN)
    IMAGE_SIZE_30M,     ///< 6400*4800
#endif
#if (MENU_STILL_SIZE_14M_EN)
    IMAGE_SIZE_14M,     ///< 4352*3264
#endif
#if (MENU_STILL_SIZE_12M_EN)
    IMAGE_SIZE_12M,		///< 4000*3000
#endif
#if (MENU_STILL_SIZE_8M_EN)
    IMAGE_SIZE_8M,		///< 3264*2448
#endif
#if (MENU_STILL_SIZE_6M_WIDE_EN)
    IMAGE_SIZE_6M_WIDE, ///<
#endif
#if (MENU_STILL_SIZE_6M_EN)
    IMAGE_SIZE_6M,		///<
#endif
#if (MENU_STILL_SIZE_5M_EN)
    IMAGE_SIZE_5M,		///< 2560*1920
#endif
#if (MENU_STILL_SIZE_3M_EN)
    IMAGE_SIZE_3M,		///< 2048*1536
#endif
#if (MENU_STILL_SIZE_2M_WIDE_EN)
    IMAGE_SIZE_2M,		///< 1920*1080
#endif
#if (MENU_STILL_SIZE_1d2M_EN)
    IMAGE_SIZE_1_2M,	///< 1280*960
#endif
#if (MENU_STILL_SIZE_VGA_EN)
    IMAGE_SIZE_VGA,		///< 640*480
#endif

    IMAGE_SIZE_NUM,
    
#if !(MENU_STILL_SIZE_30M_EN)
    IMAGE_SIZE_30M,     ///< 6400*4800
#endif
#if !(MENU_STILL_SIZE_14M_EN)
    IMAGE_SIZE_14M,		///< 4352*3264
#endif
#if !(MENU_STILL_SIZE_12M_EN)
    IMAGE_SIZE_12M,		///< 4000*3000
#endif
#if !(MENU_STILL_SIZE_8M_EN)
    IMAGE_SIZE_8M,		///< 3264*2448
#endif
#if (!MENU_STILL_SIZE_6M_WIDE_EN)
    IMAGE_SIZE_6M_WIDE, ///<
#endif
#if (!MENU_STILL_SIZE_6M_EN)
    IMAGE_SIZE_6M,		///<
#endif
#if !(MENU_STILL_SIZE_5M_EN)
    IMAGE_SIZE_5M,		///< 2560*1920
#endif
#if !(MENU_STILL_SIZE_3M_EN)
    IMAGE_SIZE_3M,		///< 2048*1536
#endif
#if !(MENU_STILL_SIZE_2M_WIDE_EN)
    IMAGE_SIZE_2M,		///< 1920*1080
#endif
#if !(MENU_STILL_SIZE_1d2M_EN)
    IMAGE_SIZE_1_2M,	///< 1280*960
#endif
#if !(MENU_STILL_SIZE_VGA_EN)
    IMAGE_SIZE_VGA,		///< 640*480
#endif
    IMAGE_SIZE_DEFAULT = 0
 } IMAGESIZE_SETTING;

typedef enum{
    #if MENU_MOVIE_SIZE_4K_24P_EN
    MOVIE_SIZE_4K_24P,
    #endif
    #if MENU_MOVIE_SIZE_4K_15P_EN
    MOVIE_SIZE_4K_15P,
    #endif
    #if MENU_MOVIE_SIZE_4K_12d5P_EN
    MOVIE_SIZE_4K_12d5P,
    #endif
    #if MENU_MOVIE_SIZE_2d7K_30P_EN
    MOVIE_SIZE_2d7K_30P,
    #endif
    #if MENU_MOVIE_SIZE_2d7K_25P_EN
    MOVIE_SIZE_2d7K_25P,
    #endif
	#if(MENU_MOVIE_SIZE_1440_30P_EN)
    MOVIE_SIZE_1440_30P,
	#endif
    #if MENU_MOVIE_SIZE_SHD_30P_EN
    MOVIE_SIZE_SHD_30P,
    #endif
	#if MENU_MOVIE_SIZE_SHD_25P_EN
    MOVIE_SIZE_SHD_25P,
    #endif
    #if MENU_MOVIE_SIZE_SHD_24P_EN
    MOVIE_SIZE_SHD_24P,
    #endif
	#if MENU_MOVIE_SIZE_1080_60P_EN
    MOVIE_SIZE_1080_60P,
    #endif
	#if MENU_MOVIE_SIZE_1080_50P_EN
    MOVIE_SIZE_1080_50P,
    #endif
	#if MENU_MOVIE_SIZE_1080P_30_HDR_EN
    MOVIE_SIZE_1080_30P_HDR,
    #endif    
	#if MENU_MOVIE_SIZE_1080P_EN
    MOVIE_SIZE_1080P,
    MOVIE_SIZE_1080_30P = MOVIE_SIZE_1080P,
	#endif
	#if MENU_MOVIE_SIZE_1080_25P_EN
    MOVIE_SIZE_1080_25P,
    #endif
	#if (MENU_MOVIE_SIZE_960P_30P_EN)
    MOVIE_SIZE_960P_30P,
	#endif
	#if MENU_MOVIE_SIZE_900P_30P_EN
    MOVIE_SIZE_900P_30P,
	#endif
	#if MENU_MOVIE_SIZE_720P_EN
    MOVIE_SIZE_720P,
    MOVIE_SIZE_720_30P = MOVIE_SIZE_720P,
    #endif
	#if MENU_MOVIE_SIZE_720_120P_EN
    MOVIE_SIZE_720_120P,
	#endif
	#if MENU_MOVIE_SIZE_720_100P_EN
    MOVIE_SIZE_720_120P,
	#endif
	#if MENU_MOVIE_SIZE_720_60P_EN
    MOVIE_SIZE_720_60P,
	#endif
	#if MENU_MOVIE_SIZE_720_50P_EN
    MOVIE_SIZE_720_60P,
	#endif
    #if MENU_MOVIE_SIZE_1080_24P_EN
    MOVIE_SIZE_1080_24P,
    #endif
    #if MENU_MOVIE_SIZE_720_24P_EN
    MOVIE_SIZE_720_24P,
    #endif
    #if MENU_MOVIE_SIZE_VGA30P_EN
	MOVIE_SIZE_VGA30P,
    MOVIE_SIZE_VGA_30P = MOVIE_SIZE_VGA30P,
	#endif
    #if MENU_MOVIE_SIZE_VGA120P_EN
    MOVIE_SIZE_VGA_120P,
    #endif

    MOVIE_SIZE_360P,//640x360 for H264 preview
    MOVIE_SIZE_360_30P = MOVIE_SIZE_360P,
    MOVIE_SIZE_NUM,

	#if !MENU_MOVIE_SIZE_4K_24P_EN
    MOVIE_SIZE_4K_24P,
	#endif
    #if !MENU_MOVIE_SIZE_4K_15P_EN
    MOVIE_SIZE_4K_15P,
    #endif
    #if !MENU_MOVIE_SIZE_4K_12d5P_EN
    MOVIE_SIZE_4K_12d5P,
    #endif
    #if !MENU_MOVIE_SIZE_2d7K_30P_EN
    MOVIE_SIZE_2d7K_30P,
    #endif
    #if !MENU_MOVIE_SIZE_2d7K_25P_EN
    MOVIE_SIZE_2d7K_25P,
    #endif
	#if !(MENU_MOVIE_SIZE_1440_30P_EN)
    MOVIE_SIZE_1440_30P,
	#endif
    #if !MENU_MOVIE_SIZE_SHD_30P_EN
    MOVIE_SIZE_SHD_30P,
    #endif
	#if !MENU_MOVIE_SIZE_SHD_25P_EN
    MOVIE_SIZE_SHD_25P,
    #endif
    #if !MENU_MOVIE_SIZE_SHD_24P_EN
    MOVIE_SIZE_SHD_24P,
    #endif	
     //add here will cause UI not sync
	#if !MENU_MOVIE_SIZE_1080P_30_HDR_EN
    MOVIE_SIZE_1080_30P_HDR,
    #endif	

	#if !MENU_MOVIE_SIZE_1080_60P_EN
    MOVIE_SIZE_1080_60P,
    #endif
	#if !MENU_MOVIE_SIZE_1080_50P_EN
    MOVIE_SIZE_1080_50P,
    #endif
	#if !MENU_MOVIE_SIZE_1080P_EN
    MOVIE_SIZE_1080P,
    MOVIE_SIZE_1080_30P = MOVIE_SIZE_1080P,
	#endif
	#if !MENU_MOVIE_SIZE_1080_25P_EN
    MOVIE_SIZE_1080_25P,
    #endif
	#if (!MENU_MOVIE_SIZE_960P_30P_EN)
    MOVIE_SIZE_960P_30P,
	#endif
	#if (!MENU_MOVIE_SIZE_900P_30P_EN)
    MOVIE_SIZE_900P_30P,
	#endif
	#if !MENU_MOVIE_SIZE_720_120P_EN
    MOVIE_SIZE_720_120P,
	#endif
	#if !MENU_MOVIE_SIZE_720_100P_EN
    MOVIE_SIZE_720_100P,
    #endif
	#if !MENU_MOVIE_SIZE_720_60P_EN
    MOVIE_SIZE_720_60P,
	#endif
	#if !MENU_MOVIE_SIZE_720_50P_EN
    MOVIE_SIZE_720_50P,
	#endif
	#if !MENU_MOVIE_SIZE_720P_EN
    MOVIE_SIZE_720P,
    MOVIE_SIZE_720_30P = MOVIE_SIZE_720P,
	#endif
    #if !MENU_MOVIE_SIZE_VGA30P_EN
	MOVIE_SIZE_VGA30P,
    MOVIE_SIZE_VGA_30P = MOVIE_SIZE_VGA30P,
	#endif
    #if !MENU_MOVIE_SIZE_VGA120P_EN
    MOVIE_SIZE_VGA_120P,
    #endif
    MOVIE_SIZE_DEFAULT = 0
 } MOVIESIZE_SETTING;

 typedef enum {
 	SLOWMOTION_SIZE_WIDE_720P_60 = 0,
    SLOWMOTION_SIZE_WIDE_480P_120, 
    SLOWMOTION_SIZE_720P_60,
    SLOWMOTION_SIZE_480P_120,   
    SLOWMOTION_SIZE_NUM,
    SLOWMOTION_SIZE_DEFAULT = 0
 } SLOWMOTIONSIZE_SETTING;	
 
typedef enum{
    SLOWMOTION_X1 = 0,   
    SLOWMOTION_X2,
    SLOWMOTION_X4,
    SLOWMOTION_X8,
    SLOWMOTION_NUM,
    
    SLOWMOTION_DEFAULT = 0
}SLOWMOTION_SETTING;


typedef enum{
#if (MENU_STILL_QUALITY_SUPER_FINE_EN || MENU_MOVIE_QUALITY_SUPER_FINE_EN)
    QUALITY_SUPER_FINE,
#endif
#if (MENU_STILL_QUALITY_FINE_EN || MENU_MOVIE_QUALITY_FINE_EN)
    QUALITY_FINE,
#endif
    QUALITY_NUM,
#if (!MENU_STILL_QUALITY_SUPER_FINE_EN && !MENU_MOVIE_QUALITY_SUPER_FINE_EN)
    QUALITY_SUPER_FINE,
#endif
#if (!MENU_STILL_QUALITY_FINE_EN && !MENU_MOVIE_QUALITY_FINE_EN)
    QUALITY_FINE,
#endif
    QUALITY_DEFAULT = 0
}QUALITY_SETTING;

typedef enum{
#if (MENU_STILL_SELF_TIMER_OFF_EN)
    SELF_TIMER_OFF,
#endif
#if (MENU_STILL_SELF_TIMER_2S_EN)
    SELF_TIMER_2S,
#endif
#if (MENU_STILL_SELF_TIMER_10S_EN)
    SELF_TIMER_10S,
#endif

    SELF_TIMER_NUM,

#if (!MENU_STILL_SELF_TIMER_OFF_EN)
    SELF_TIMER_OFF,
#endif
#if (!MENU_STILL_SELF_TIMER_2S_EN)
    SELF_TIMER_2S,
#endif
#if (!MENU_STILL_SELF_TIMER_10S_EN)
    SELF_TIMER_10S,
#endif
    SELF_TIMER_DEFAULT = 0
}SELFTIMER_SETTING;

typedef enum{
    WNR_OFF = 0,   
    WNR_ON,
    WNR_NUM,
    WNR_DEFAULT = 0
}WNR_SETTING;

typedef enum{
#if (MENU_STILL_BURST_SHOT_OFF_EN)
    BURST_SHOT_OFF,
#endif
#if (MENU_STILL_BURST_SHOT_LO_EN)
    BURST_SHOT_LO,
#endif
#if (MENU_STILL_BURST_SHOT_MID_EN)
    BURST_SHOT_MID,
#endif
#if (MENU_STILL_BURST_SHOT_HI_EN)
    BURST_SHOT_HI,
#endif

    BURST_SHOT_NUM,

#if (!MENU_STILL_BURST_SHOT_OFF_EN)
    BURST_SHOT_OFF,
#endif
#if (!MENU_STILL_BURST_SHOT_LO_EN)
    BURST_SHOT_LO,
#endif
#if (!MENU_STILL_BURST_SHOT_MID_EN)
    BURST_SHOT_MID,
#endif
#if (!MENU_STILL_BURST_SHOT_HI_EN)
    BURST_SHOT_HI,
#endif
    BURST_SHOT_DEFAULT = 0
}BURSTSHOT_SETTING;

typedef enum{
#if (MENU_STILL_FLASH_AUTO_EN)
    FLASH_AUTO,
#endif
#if (MENU_STILL_FLASH_SLOW_SYNC_EN)
    FLASH_SLOW_SYNC,
#endif
#if (MENU_STILL_FLASH_ON_EN)
    FLASH_ON,
#endif
#if (MENU_STILL_FLASH_OFF_EN)
    FLASH_OFF,
#endif

    FLASH_NUM,

#if (!MENU_STILL_FLASH_AUTO_EN)
    FLASH_AUTO,
#endif
#if (!MENU_STILL_FLASH_SLOW_SYNC_EN)
    FLASH_SLOW_SYNC,
#endif
#if (!MENU_STILL_FLASH_ON_EN)
    FLASH_ON,
#endif
#if (!MENU_STILL_FLASH_OFF_EN)
    FLASH_OFF,
#endif
    FLASH_DEFAULT_NUM = 0
}FLASH_SETTING;

typedef enum{
#if (MENU_STILL_FLASH_LEVEL_HIGH_EN)
    FLASHLEVEL_HIGH,
#endif
#if (MENU_STILL_FLASH_LEVEL_NORMAL_EN)
    FLASHLEVEL_NORMAL,
#endif
#if (MENU_STILL_FLASH_LEVEL_LOW_EN)
    FLASHLEVEL_LOW,
#endif

    FLASHLEVEL_NUM,

#if (!MENU_STILL_FLASH_LEVEL_HIGH_EN)
    FLASHLEVEL_HIGH,
#endif
#if (!MENU_STILL_FLASH_LEVEL_NORMAL_EN)
    FLASHLEVEL_NORMAL,
#endif
#if (!MENU_STILL_FLASH_LEVEL_LOW_EN)
    FLASHLEVEL_LOW,
#endif
    FLASHLEVEL_DEFAULT = 0
}FLASHLEVEL_SETTING;

typedef enum{
#if (MENU_STILL_REDEYE_REDUCE_ON_EN)
    REDEYE_REDUCE_ON,
#endif
#if (MENU_STILL_REDEYE_REDUCE_OFF_EN)
    REDEYE_REDUCE_OFF,
#endif

    REDEYE_REDUCE_NUM,

#if (!MENU_STILL_REDEYE_REDUCE_ON_EN)
    REDEYE_REDUCE_ON,
#endif
#if (!MENU_STILL_REDEYE_REDUCE_OFF_EN)
    REDEYE_REDUCE_OFF,
#endif
    REDEYE_REDUCE_DEFAULT = 0
}REDEYE_REDUCTION_SETTING;

typedef enum{
#if (MENU_STILL_STABILIZE_ON_EN)
    IMAGE_STABILIZE_ON,
#endif
#if (MENU_STILL_STABILIZE_OFF_EN)
    IMAGE_STABILIZE_OFF,
#endif

    IMAGE_STABILIZE_NUM,

#if (!MENU_STILL_STABILIZE_ON_EN)
    IMAGE_STABILIZE_ON,
#endif
#if (!MENU_STILL_STABILIZE_OFF_EN)
    IMAGE_STABILIZE_OFF,
#endif
    IMAGE_STABILIZE_DEFAULT = 0
}IMAGESTABILIZATION_SETTING;

typedef enum{
#if (MENU_MANUAL_SCENE_AUTO_EN)
    SCENE_AUTO,
#endif
#if (MENU_MANUAL_SCENE_SPORT_EN)
    SCENE_SPORT,
#endif
#if (MENU_MANUAL_SCENE_PORTRAIT_EN)
    SCENE_PORTRAIT,
#endif
#if (MENU_MANUAL_SCENE_LANDSCAPE_EN)
    SCENE_LANDSCAPE,
#endif
#if (MENU_MANUAL_SCENE_TWILIGHT_PORTRAIT_EN)
    SCENE_TWILIGHT_PORTRAIT,
#endif
#if (MENU_MANUAL_SCENE_TWILIGHT_EN)
    SCENE_TWILIGHT,
#endif
#if (MENU_MANUAL_SCENE_SNOW_EN)
    SCENE_SNOW,
#endif
#if (MENU_MANUAL_SCENE_BEACH_EN)
    SCENE_BEACH,
#endif
#if (MENU_MANUAL_SCENE_FIREWORKS_EN)
    SCENE_FIREWORKS,
#endif

    SCENE_NUM,

#if (!MENU_MANUAL_SCENE_AUTO_EN)
    SCENE_AUTO,
#endif
#if (!MENU_MANUAL_SCENE_SPORT_EN)
    SCENE_SPORT,
#endif
#if (!MENU_MANUAL_SCENE_PORTRAIT_EN)
    SCENE_PORTRAIT,
#endif
#if (!MENU_MANUAL_SCENE_LANDSCAPE_EN)
    SCENE_LANDSCAPE,
#endif
#if (!MENU_MANUAL_SCENE_TWILIGHT_PORTRAIT_EN)
    SCENE_TWILIGHT_PORTRAIT,
#endif
#if (!MENU_MANUAL_SCENE_TWILIGHT_EN)
    SCENE_TWILIGHT,
#endif
#if (!MENU_MANUAL_SCENE_SNOW_EN)
    SCENE_SNOW,
#endif
#if (!MENU_MANUAL_SCENE_BEACH_EN)
    SCENE_BEACH,
#endif
#if (!MENU_MANUAL_SCENE_FIREWORKS_EN)
    SCENE_FIREWORKS,
#endif
    SCENE_DEFAULT = 0
 } SCENE_SETTING;

typedef enum{
#if (MENU_MANUAL_FOCUS_MULTI_EN)
    FOCUS_MULTI,
#endif
#if (MENU_MANUAL_FOCUS_CENTERSPOT_EN)
    FOCUS_CENTERSPOT,
#endif

    FOCUS_NUM,

#if (!MENU_MANUAL_FOCUS_MULTI_EN)
    FOCUS_MULTI,
#endif
#if (!MENU_MANUAL_FOCUS_CENTERSPOT_EN)
    FOCUS_CENTERSPOT,
#endif

    FOCUS_DEFAULT = 0
}FOCUS_SETTING;

typedef enum{
#if (MENU_MANUAL_FOCUS_RANGE_NORMAL_EN)
    FOCUS_RANGE_NORMAL,
#endif
#if (MENU_MANUAL_FOCUS_RANGE_MACRO_EN)
    FOCUS_RANGE_MACRO,
#endif
//  FOCUS_RANGE_INFINITY,

    FOCUS_RANGE_NUM,

#if (!MENU_MANUAL_FOCUS_RANGE_NORMAL_EN)
    FOCUS_RANGE_NORMAL,
#endif
#if (!MENU_MANUAL_FOCUS_RANGE_MACRO_EN)
    FOCUS_RANGE_MACRO,
#endif

    FOCUS_RANGE_DEFAULT = 0
}FOCUSRANGE_SETTING;

typedef enum {
    METERING_CENTER = 0,
    METERING_CENTER_SPOT,
    METERING_NUM,
    METERING_AVERAGE,
    METERING_MATRIX,
    METERING_WEIGHTED,
    METERING_MULTI,
    METERING_DEFAULT = 0
} METERING_SETTING;

typedef enum {
#if (MENU_MANUAL_EV_N20_EN)
    EVVALUE_N20 ,
#endif
#if (MENU_MANUAL_EV_N17_EN)
    EVVALUE_N17 ,
#endif
#if (MENU_MANUAL_EV_N15_EN)
    EVVALUE_N15 ,
#endif
#if (MENU_MANUAL_EV_N13_EN)
    EVVALUE_N13 ,
#endif
#if (MENU_MANUAL_EV_N10_EN)
    EVVALUE_N10 ,
#endif
#if (MENU_MANUAL_EV_N07_EN)
    EVVALUE_N07 ,
#endif
#if (MENU_MANUAL_EV_N05_EN)
    EVVALUE_N05 ,
#endif
#if (MENU_MANUAL_EV_N03_EN)
    EVVALUE_N03 ,
#endif
//#if (MENU_MANUAL_EV_00_EN)    // always exist
    EVVALUE_00  ,
//#endif
#if (MENU_MANUAL_EV_P03_EN)
    EVVALUE_P03 ,
#endif
#if (MENU_MANUAL_EV_P05_EN)
    EVVALUE_P05 ,
#endif
#if (MENU_MANUAL_EV_P07_EN)
    EVVALUE_P07 ,
#endif
#if (MENU_MANUAL_EV_P10_EN)
    EVVALUE_P10 ,
#endif
#if (MENU_MANUAL_EV_P13_EN)
    EVVALUE_P13 ,
#endif
#if (MENU_MANUAL_EV_P15_EN)
    EVVALUE_P15 ,
#endif
#if (MENU_MANUAL_EV_P17_EN)
    EVVALUE_P17 ,
#endif
#if (MENU_MANUAL_EV_P20_EN)
    EVVALUE_P20 ,
#endif

    EVVALUE_NUM ,

#if (!MENU_MANUAL_EV_N20_EN)
    EVVALUE_N20 ,
#endif
#if (!MENU_MANUAL_EV_N17_EN)
    EVVALUE_N17 ,
#endif
#if (!MENU_MANUAL_EV_N15_EN)
    EVVALUE_N15 ,
#endif
#if (!MENU_MANUAL_EV_N13_EN)
    EVVALUE_N13 ,
#endif
#if (!MENU_MANUAL_EV_N10_EN)
    EVVALUE_N10 ,
#endif
#if (!MENU_MANUAL_EV_N07_EN)
    EVVALUE_N07 ,
#endif
#if (!MENU_MANUAL_EV_N05_EN)
    EVVALUE_N05 ,
#endif
#if (!MENU_MANUAL_EV_N03_EN)
    EVVALUE_N03 ,
#endif
#if (!MENU_MANUAL_EV_P03_EN)
    EVVALUE_P03 ,
#endif
#if (!MENU_MANUAL_EV_P05_EN)
    EVVALUE_P05 ,
#endif
#if (!MENU_MANUAL_EV_P07_EN)
    EVVALUE_P07 ,
#endif
#if (!MENU_MANUAL_EV_P10_EN)
    EVVALUE_P10 ,
#endif
#if (!MENU_MANUAL_EV_P13_EN)
    EVVALUE_P13 ,
#endif
#if (!MENU_MANUAL_EV_P15_EN)
    EVVALUE_P15 ,
#endif
#if (!MENU_MANUAL_EV_P17_EN)
    EVVALUE_P17 ,
#endif
#if (!MENU_MANUAL_EV_P20_EN)
    EVVALUE_P20 ,
#endif


    EVVALUE_DEFAULT = EVVALUE_00
}EVVALUE_SETTING;

typedef enum {
#if (MENU_MANUAL_ISO_AUTO_EN)
    ISO_AUTO,
#endif
//  ISO_80,
#if (MENU_MANUAL_ISO_100_EN)
    ISO_100,
#endif
#if (MENU_MANUAL_ISO_200_EN)
    ISO_200,
#endif
#if (MENU_MANUAL_ISO_400_EN)
    ISO_400,
#endif
#if (MENU_MANUAL_ISO_800_EN)
    ISO_800,
#endif
#if (MENU_MANUAL_ISO_1200_EN)
    ISO_1200,
#endif
#if (MENU_MANUAL_ISO_1600_EN)
    ISO_1600,
#endif
#if (MENU_MANUAL_ISO_3200_EN)
    ISO_3200,
#endif

    ISO_NUM,

#if (!MENU_MANUAL_ISO_AUTO_EN)
    ISO_AUTO,
#endif
//  ISO_80,
#if (!MENU_MANUAL_ISO_100_EN)
    ISO_100,
#endif
#if (!MENU_MANUAL_ISO_200_EN)
    ISO_200,
#endif
#if (!MENU_MANUAL_ISO_400_EN)
    ISO_400,
#endif
#if (!MENU_MANUAL_ISO_800_EN)
    ISO_800,
#endif
#if (!MENU_MANUAL_ISO_1200_EN)
    ISO_1200,
#endif
#if (!MENU_MANUAL_ISO_1600_EN)
    ISO_1600,
#endif
#if (!MENU_MANUAL_ISO_3200_EN)
    ISO_3200,
#endif
    ISO_DEFAULT = 0
} ISOMode_SETTING;

typedef enum {
#if (MENU_MANUAL_WB_AUTO_EN)
    WB_AUTO,
#endif
#if (MENU_MANUAL_WB_DAYLIGHT_EN)
    WB_DAYLIGHT,
#endif
#if (MENU_MANUAL_WB_CLOUDY_EN)
    WB_CLOUDY,
#endif
#if (MENU_MANUAL_WB_FLUORESCENT1_EN)
    WB_FLUORESCENT1,
    WB_FLUORESCENT = WB_FLUORESCENT1,
#endif
#if (MENU_MANUAL_WB_FLUORESCENT2_EN)
    WB_FLUORESCENT2,
#endif
#if (MENU_MANUAL_WB_FLUORESCENT3_EN)
    WB_FLUORESCENT3,
#endif
#if (MENU_MANUAL_WB_INCANDESCENT_EN)
    WB_INCANDESCENT,
#endif
#if (MENU_MANUAL_WB_FLASH_EN)
    WB_FLASH,
#endif
#if (MENU_MANUAL_WB_ONEPUSH_EN)
    WB_ONEPUSH,
#endif
#if (MENU_MANUAL_WB_ONE_PUSH_SET_EN)
    WB_ONE_PUSH_SET,
#endif
#if (MENU_MANUAL_WB_UNDERWATER)
	WB_UNDERWATER,
#endif

    WB_NUM,

#if (!MENU_MANUAL_WB_AUTO_EN)
    WB_AUTO,
#endif
#if (!MENU_MANUAL_WB_DAYLIGHT_EN)
    WB_DAYLIGHT,
#endif
#if (!MENU_MANUAL_WB_CLOUDY_EN)
    WB_CLOUDY,
#endif
#if (!MENU_MANUAL_WB_FLUORESCENT1_EN)
    WB_FLUORESCENT1,
    WB_FLUORESCENT = WB_FLUORESCENT1,
#endif
#if (!MENU_MANUAL_WB_FLUORESCENT2_EN)
    WB_FLUORESCENT2,
#endif
#if (!MENU_MANUAL_WB_FLUORESCENT3_EN)
    WB_FLUORESCENT3,
#endif
#if (!MENU_MANUAL_WB_INCANDESCENT_EN)
    WB_INCANDESCENT,
#endif
#if (!MENU_MANUAL_WB_FLASH_EN)
    WB_FLASH,
#endif
#if (!MENU_MANUAL_WB_ONEPUSH_EN)
    WB_ONEPUSH,
#endif
#if (!MENU_MANUAL_WB_ONE_PUSH_SET_EN)
    WB_ONE_PUSH_SET,
#endif
#if (!MENU_MANUAL_WB_UNDERWATER)
	WB_UNDERWATER,
#endif

    WB_DEFAULT = 0
}WB_SETTING;

typedef enum{
#if (MENU_MANUAL_COLOR_NATURAL_EN)
    COLOR_NATURAL,
#endif
#if (MENU_MANUAL_COLOR_VIVID_EN)
    COLOR_VIVID,
#endif
#if (MENU_MANUAL_COLOR_PALE_EN)
    COLOR_PALE,
#endif

    COLOR_NUM,

#if (!MENU_MANUAL_COLOR_NATURAL_EN)
    COLOR_NATURAL,
#endif
#if (!MENU_MANUAL_COLOR_VIVID_EN)
    COLOR_VIVID,
#endif
#if (!MENU_MANUAL_COLOR_PALE_EN)
    COLOR_PALE,
#endif
    COLOR_DEFAULT = 0
}COLOR_SETTING;

typedef enum {
#if (MENU_MANUAL_EFFECT_NORMAL_EN)
    EFFECT_NORMAL,
#endif
#if (MENU_MANUAL_EFFECT_SEPIA_EN)
    EFFECT_SEPIA,
#endif
#if (MENU_MANUAL_EFFECT_BLACK_WHITE_EN)
    EFFECT_BLACK_WHITE,
#endif
#if (MENU_MANUAL_EFFECT_EMBOSS_EN)
    EFFECT_EMBOSS,
#endif
#if (MENU_MANUAL_EFFECT_NEGATIVE_EN)
    EFFECT_NEGATIVE,
#endif
#if (MENU_MANUAL_EFFECT_SKETCH_EN)
    EFFECT_SKETCH,
#endif
#if (MENU_MANUAL_EFFECT_OIL_EN)
    EFFECT_OIL,
#endif
#if (MENU_MANUAL_EFFECT_CRAYON_EN)
    EFFECT_CRAYON,
#endif
#if (MENU_MANUAL_EFFECT_BEAUTY_EN)
    EFFECT_BEAUTY,
#endif

    EFFECT_NUM,

#if (!MENU_MANUAL_EFFECT_NORMAL_EN)
    EFFECT_NORMAL,
#endif
#if (!MENU_MANUAL_EFFECT_SEPIA_EN)
    EFFECT_SEPIA,
#endif
#if (!MENU_MANUAL_EFFECT_BLACK_WHITE_EN)
    EFFECT_BLACK_WHITE,
#endif
#if (!MENU_MANUAL_EFFECT_EMBOSS_EN)
    EFFECT_EMBOSS,
#endif
#if (!MENU_MANUAL_EFFECT_NEGATIVE_EN)
    EFFECT_NEGATIVE,
#endif
#if (!MENU_MANUAL_EFFECT_SKETCH_EN)
    EFFECT_SKETCH,
#endif
#if (!MENU_MANUAL_EFFECT_OIL_EN)
    EFFECT_OIL,
#endif
#if (!MENU_MANUAL_EFFECT_CRAYON_EN)
    EFFECT_CRAYON,
#endif
#if (!MENU_MANUAL_EFFECT_BEAUTY_EN)
    EFFECT_BEAUTY,
#endif
    EFFECT_DEFAULT = 0
}EFFECT_SETTING;

typedef enum{
    MEDIA_SETTING_SD_CARD,
    MEDIA_SETTING_SD_CARD1,
    MEDIA_SETTING_INTERNAL,
    MEDIA_SETTING_SD_CARD_ERR,
    MEDIA_SETTING_INTERNAL_ERR,
    MEDIA_SETTING_FACFAT,
    MEDIA_SETTING_USERFAT,
    MEDIA_SETTING_NUM,
    MEDIA_SETTING_DEFAULT = 0
}MEDIASETING_SETTING;

typedef enum{
    DISPLAY_INFO_SIMPLE,
    DISPLAY_INFO_BASIC,
    DISPLAY_INFO_NONE,
    DISPLAY_INFO_NUM,
    DISPLAY_INFO_DEFAULT = DISPLAY_INFO_SIMPLE
}DISPLAYINFO_SETTING;

typedef enum{
    WDR_OFF,
    WDR_ON,
    WDR_NUM,
    WDR_DEFAULT = 0
} WDR_MODE;

typedef enum{
#if (MENU_MOVIE_MIC_SEN_STANDARD_EN)
    MIC_SEN_STANDARD,
#endif
#if (MENU_MOVIE_MIC_SEN_LOW_EN)
    MIC_SEN_LOW,
#endif

    MIC_SEN_NUM,

#if (!MENU_MOVIE_MIC_SEN_STANDARD_EN)
    MIC_SEN_STANDARD,
#endif
#if (!MENU_MOVIE_MIC_SEN_LOW_EN)
    MIC_SEN_LOW,
#endif

    MIC_SEN_DEFAULT = 0
}MIC_SENSITIVITY_SETTING;

typedef enum{
#if (MENU_MOVIE_PRE_RECORD_ON_EN)
    MOVIE_PRE_RECORD_ON,
#endif
#if (MENU_MOVIE_PRE_RECORD_OFF_EN)
    MOVIE_PRE_RECORD_OFF,
#endif

    MOVIE_PRE_RECORD_NUM,

#if (!MENU_MOVIE_PRE_RECORD_ON_EN)
    MOVIE_PRE_RECORD_ON,
#endif
#if (!MENU_MOVIE_PRE_RECORD_OFF_EN)
    MOVIE_PRE_RECORD_OFF,
#endif

    MOVIE_PRE_RECORD_DEFAULT = 0
}MOVIE_PRE_RECORD_SETTING;

typedef enum{
#if (MENU_PLAYBACK_VOLUME_LV0_EN)
    VOLUME_00,
#endif
#if (MENU_PLAYBACK_VOLUME_LV1_EN)
    VOLUME_01 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV2_EN)
    VOLUME_02 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV3_EN)
    VOLUME_03 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV4_EN)
    VOLUME_04 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV5_EN)
    VOLUME_05 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV6_EN)
    VOLUME_06 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV7_EN)
    VOLUME_07 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV8_EN)
    VOLUME_08 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV9_EN)
    VOLUME_09 ,
#endif
#if (MENU_PLAYBACK_VOLUME_LV10_EN) && (AUDIO_PLAYBACK_MUTE)
    VOLUME_10 ,
#endif

    VOLUME_NUM,

#if (!MENU_PLAYBACK_VOLUME_LV0_EN)
    VOLUME_00,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV1_EN)
    VOLUME_01 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV2_EN)
    VOLUME_02 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV3_EN)
    VOLUME_03 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV4_EN)
    VOLUME_04 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV5_EN)
    VOLUME_05 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV6_EN)
    VOLUME_06 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV7_EN)
    VOLUME_07 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV8_EN)
    VOLUME_08 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV9_EN)
    VOLUME_09 ,
#endif
#if (!MENU_PLAYBACK_VOLUME_LV10_EN || !AUDIO_PLAYBACK_MUTE)
    VOLUME_10 ,
#endif

    VOLUME_DEFAULT = 0
}VOLUME_SETTING;

typedef enum{
#if (MENU_GENERAL_BEEP_ON_EN)
    BEEP_ON,
#endif
#if (MENU_GENERAL_BEEP_OFF_EN)
    BEEP_OFF,
#endif

    BEEP_NUM,

#if (!MENU_GENERAL_BEEP_ON_EN)
    BEEP_ON,
#endif
#if (!MENU_GENERAL_BEEP_OFF_EN)
    BEEP_OFF,
#endif

    BEEP_DEFAULT = 0
}BEEP_SETTING;

typedef enum{
#if (MENU_GENERAL_LCD_BRIGHTNESS_NORMAL_EN)
    LCD_BRIGHTNESS_NORMAL,
#endif
#if (MENU_GENERAL_LCD_BRIGHTNESS_BRIGHTNESS_EN)
    LCD_BRIGHTNESS_BRIGHT,
#endif

    LCD_BRIGHTNESS_NUM,

#if (!MENU_GENERAL_LCD_BRIGHTNESS_NORMAL_EN)
    LCD_BRIGHTNESS_NORMAL,
#endif
#if (!MENU_GENERAL_LCD_BRIGHTNESS_BRIGHTNESS_EN)
    LCD_BRIGHTNESS_BRIGHT,
#endif

    LCD_BRIGHTNESS_DEFAULT = 0
}LCDBRIGHTNESS_SETTING;

typedef enum{
#if (MENU_GENERAL_TV_SYSTEM_NTSC_EN)
    TV_SYSTEM_NTSC = 0,
#endif
#if (MENU_GENERAL_TV_SYSTEM_PAL_EN)
    TV_SYSTEM_PAL,
#endif

    TV_SYSTEM_NUM,

#if (!MENU_GENERAL_TV_SYSTEM_NTSC_EN)
    TV_SYSTEM_NTSC,
#endif
#if (!MENU_GENERAL_TV_SYSTEM_PAL_EN)
    TV_SYSTEM_PAL,
#endif

    TV_SYSTEM_DEFAULT = 0
}TV_SYSTEM_NTSC_SETTING;

typedef enum{
    TV_TYPE_16_9,
    TV_TYPE_4_3,
    TV_TYPE_NUM,
    TV_TYPE_DEFAULT = 0
}TV_TYPE_SETTING;

typedef enum{
    #if MENU_GENERAL_HDMI_OUTPUT_1080P_EN
    HDMI_OUTPUT_1080P,
    #endif
    #if MENU_GENERAL_HDMI_OUTPUT_1080I_EN
    HDMI_OUTPUT_1080I,
    #endif
    #if MENU_GENERAL_HDMI_OUTPUT_720P_EN
    HDMI_OUTPUT_720P,
    #endif
    #if MENU_GENERAL_HDMI_OUTPUT_480P_EN
    HDMI_OUTPUT_480P,
    #endif

    HDMI_OUTPUT_NUM,

    #if !MENU_GENERAL_HDMI_OUTPUT_1080P_EN
    HDMI_OUTPUT_1080P,
    #endif
    #if !MENU_GENERAL_HDMI_OUTPUT_1080I_EN
    HDMI_OUTPUT_1080I,
    #endif
    #if !MENU_GENERAL_HDMI_OUTPUT_720P_EN
    HDMI_OUTPUT_720P,
    #endif
    #if !MENU_GENERAL_HDMI_OUTPUT_480P_EN
    HDMI_OUTPUT_480P,
    #endif

    HDMI_OUTPUT_DEFAULT = 0
}HDMI_OUTPUT_SETTING;

typedef enum{
    LDWS_EN_ON = COMMON_LDWS_EN_ON,
    LDWS_EN_OFF = COMMON_LDWS_EN_OFF,
    LDWS_EN_DEFAULT = LDWS_EN_OFF
} LDWS_EN_SETTING;

typedef enum{
    FCWS_EN_ON = COMMON_FCWS_EN_ON,
    FCWS_EN_OFF = COMMON_FCWS_EN_OFF,
    FCWS_EN_DEFAULT = FCWS_EN_OFF
} FCWS_EN_SETTING;

typedef enum{
    SAG_EN_ON = COMMON_SAG_EN_ON,
    SAG_EN_OFF = COMMON_SAG_EN_OFF,
    SAG_EN_DEFAULT = SAG_EN_OFF
} SAG_EN_SETTING;

typedef enum{
    HDR_EN_ON = COMMON_HDR_EN_ON,
    HDR_EN_OFF = COMMON_HDR_EN_OFF,
    HDR_EN_DEFAULT = HDR_EN_OFF
} HDR_EN_SETTING;

typedef enum{
    SLOWMOTION_EN_X1 = COMMON_SLOWMOTION_EN_X1,
    SLOWMOTION_EN_X3 = COMMON_SLOWMOTION_EN_X3,
    SLOWMOTION_EN_X5 = COMMON_SLOWMOTION_EN_X5,
    SLOWMOTION_EN_X7 = COMMON_SLOWMOTION_EN_X7,
    SLOWMOTION_EN_DEFAULT = SLOWMOTION_EN_X1
} SLOWMOTION_EN_SETTING;

typedef enum{
    WNR_EN_OFF = COMMON_WNR_EN_OFF,
    WNR_EN_ON  = COMMON_WNR_EN_ON,
    WNR_EN_DEFAULT = WNR_EN_OFF
} WNR_EN_SETTING;

typedef enum{
#if (MENU_GENERAL_LANGUAGE_ENGLISH_EN)
    LANGUAGE_ENGLISH,
#endif
#if (MENU_GENERAL_LANGUAGE_SPANISH_EN)
    LANGUAGE_SPANISH,
#endif
#if (MENU_GENERAL_LANGUAGE_PORTUGUESE_EN)
    LANGUAGE_PORTUGUESE,
#endif
#if (MENU_GENERAL_LANGUAGE_RUSSIAN_EN)
    LANGUAGE_RUSSIAN,
#endif
#if (MENU_GENERAL_LANGUAGE_SCHINESE_EN)
    LANGUAGE_SCHINESE,
#endif
#if (MENU_GENERAL_LANGUAGE_TCHINESE_EN)
    LANGUAGE_TCHINESE,
#endif
#if (MENU_GENERAL_LANGUAGE_GERMAN_EN)
    LANGUAGE_GERMAN,
#endif
#if (MENU_GENERAL_LANGUAGE_ITALIAN_EN)
    LANGUAGE_ITALIAN,
#endif
#if (MENU_GENERAL_LANGUAGE_LATVIAN_EN)
    LANGUAGE_LATVIAN,
#endif
#if (MENU_GENERAL_LANGUAGE_POLISH_EN)
	LANGUAGE_POLISH,
#endif
#if (MENU_GENERAL_LANGUAGE_ROMANIAN_EN)
    LANGUAGE_ROMANIAN,
#endif
#if (MENU_GENERAL_LANGUAGE_SLOVAK_EN)
    LANGUAGE_SLOVAK,
#endif
#if (MENU_GENERAL_LANGUAGE_UKRANINIAN_EN)
    LANGUAGE_UKRANINIAN,
#endif
#if (MENU_GENERAL_LANGUAGE_FRENCH_EN)
    LANGUAGE_FRENCH,
#endif
#if (MENU_GENERAL_LANGUAGE_JAPANESE_EN)
    LANGUAGE_JAPANESE,
#endif
#if (MENU_GENERAL_LANGUAGE_KOREAN_EN)
    LANGUAGE_KOREAN,
#endif
#if (MENU_GENERAL_LANGUAGE_CZECH_EN)
    LANGUAGE_CZECH,
#endif

    LANGUAGE_NUM,

#if !(MENU_GENERAL_LANGUAGE_ENGLISH_EN)
    LANGUAGE_ENGLISH,
#endif
#if !(MENU_GENERAL_LANGUAGE_SPANISH_EN)
    LANGUAGE_SPANISH,
#endif
#if !(MENU_GENERAL_LANGUAGE_PORTUGUESE_EN)
    LANGUAGE_PORTUGUESE,
#endif
#if !(MENU_GENERAL_LANGUAGE_RUSSIAN_EN)
    LANGUAGE_RUSSIAN,
#endif
#if !(MENU_GENERAL_LANGUAGE_SCHINESE_EN)
    LANGUAGE_SCHINESE,
#endif
#if !(MENU_GENERAL_LANGUAGE_TCHINESE_EN)
    LANGUAGE_TCHINESE,
#endif
#if !(MENU_GENERAL_LANGUAGE_GERMAN_EN)
    LANGUAGE_GERMAN,
#endif
#if !(MENU_GENERAL_LANGUAGE_ITALIAN_EN)
    LANGUAGE_ITALIAN,
#endif
#if !(MENU_GENERAL_LANGUAGE_LATVIAN_EN)
    LANGUAGE_LATVIAN,
#endif
#if !(MENU_GENERAL_LANGUAGE_POLISH_EN)
	LANGUAGE_POLISH,
#endif
#if !(MENU_GENERAL_LANGUAGE_ROMANIAN_EN)
    LANGUAGE_ROMANIAN,
#endif
#if !(MENU_GENERAL_LANGUAGE_SLOVAK_EN)
    LANGUAGE_SLOVAK,
#endif
#if !(MENU_GENERAL_LANGUAGE_UKRANINIAN_EN)
    LANGUAGE_UKRANINIAN,
#endif
#if !(MENU_GENERAL_LANGUAGE_FRENCH_EN)
    LANGUAGE_FRENCH,
#endif
#if !(MENU_GENERAL_LANGUAGE_JAPANESE_EN)
    LANGUAGE_JAPANESE,
#endif
#if !(MENU_GENERAL_LANGUAGE_KOREAN_EN)
    LANGUAGE_KOREAN,
#endif
#if !(MENU_GENERAL_LANGUAGE_CZECH_EN)
    LANGUAGE_CZECH,
#endif
    LANGUAGE_DEFAULT = 0
}LANGUAGE_SETTING;

typedef enum{
#if (MENU_GENERAL_DATE_FORMAT_NONE_EN)
    DATETIME_SETUP_NONE = 0,
#endif
#if (MENU_GENERAL_DATE_FORMAT_YMD_EN)
    DATETIME_SETUP_YMD,
#endif
#if (MENU_GENERAL_DATE_FORMAT_MDY_EN)
    DATETIME_SETUP_MDY,
#endif
#if (MENU_GENERAL_DATE_FORMAT_DMY_EN)
    DATETIME_SETUP_DMY,
#endif
    DATETIME_SETUP_NUM,
    DATETIME_SETUP_DEFAULT = 0
}DATETIMESETUP_SETTING;

typedef enum {
#if (MENU_GENERAL_DATE_LOGO_STAMP_DATE_LOGO_EN)
	DATELOGO_STAMP,
#endif
#if (MENU_GENERAL_DATE_LOGO_STAMP_DATE_EN)
	DATE_STAMP,
#endif
#if (MENU_GENERAL_DATE_LOGO_STAMP_LOGO_EN)
	LOGO_STAMP,
#endif
#if (MENU_GENERAL_DATE_LOGO_STAMP_OFF_EN)
	OFF_STAMP,
#endif
	DATALOGO_SETUP_NUM,
	DATALOGO_SETUP_DEFAULT = 0
}DATELOGOSTAMP_SETTING;

typedef enum{
#if (MENU_GENERAL_AUTO_POWEROFF_NEVER_EN)
    AUTO_POWER_OFF_NEVER,
#endif
#if (MENU_GENERAL_AUTO_POWEROFF_15SEC_EN)
    AUTO_POWER_OFF_15SEC,
#endif

#if (MENU_GENERAL_AUTO_POWEROFF_30SEC_EN)
    AUTO_POWER_OFF_30SEC,
#endif
#if (MENU_GENERAL_AUTO_POWEROFF_1MIN_EN)
    AUTO_POWER_OFF_1MIN,
#endif
#if (MENU_GENERAL_AUTO_POWEROFF_2MIN_EN)
    AUTO_POWER_OFF_2MINS,
#endif
#if (MENU_GENERAL_AUTO_POWEROFF_3MIN_EN)
    AUTO_POWER_OFF_3MINS,
#endif
#if (MENU_GENERAL_AUTO_POWEROFF_5MIN_EN)
    AUTO_POWER_OFF_5MINS,
#endif

    AUTO_POWER_OFF_NUM,

#if (!MENU_GENERAL_AUTO_POWEROFF_NEVER_EN)
    AUTO_POWER_OFF_NEVER,
#endif
#if (!MENU_GENERAL_AUTO_POWEROFF_15SEC_EN)
    AUTO_POWER_OFF_15SEC,
#endif
#if (!MENU_GENERAL_AUTO_POWEROFF_30SEC_EN)
    AUTO_POWER_OFF_30SEC,
#endif
#if (!MENU_GENERAL_AUTO_POWEROFF_1MIN_EN)
    AUTO_POWER_OFF_1MIN,
#endif
#if (!MENU_GENERAL_AUTO_POWEROFF_2MIN_EN)
    AUTO_POWER_OFF_2MINS,
#endif
#if (!MENU_GENERAL_AUTO_POWEROFF_3MIN_EN)
    AUTO_POWER_OFF_3MINS,
#endif
#if (!MENU_GENERAL_AUTO_POWEROFF_5MIN_EN)
    AUTO_POWER_OFF_5MINS,
#endif

    AUTO_POWER_OFF_DEFAULT = 0
}AUTO_POWER_OFF_SETTING;

typedef enum{
#if (MENU_MOVIE_SLOW_SHUTTER_ON_EN)
    SLOW_SHUTTER_ON,
#endif
#if (MENU_MOVIE_SLOW_SHUTTER_OFF_EN)
    SLOW_SHUTTER_OFF,
#endif

    SLOW_SHUTTER_NUM,

#if (!MENU_MOVIE_SLOW_SHUTTER_ON_EN)
    SLOW_SHUTTER_ON,
#endif
#if (!MENU_MOVIE_SLOW_SHUTTER_OFF_EN)
    SLOW_SHUTTER_OFF,
#endif

    SLOW_SHUTTER_DEFAULT = 0
}SLOWSHUTTER_SETTING;

typedef enum{
    SLIDESHOW_DISABLE,
    SLIDESHOW_ENABLE,
    SLIDESHOW_NUM,
    SLIDESHOW_DEFAULT = 0
}SLIDESHOW_SETTING;

typedef enum{
#if (MENU_PLAYBACK_SLIDESHOW_FILE_ALL_EN)
    SLIDESHOW_FILE_ALL,
#endif
#if (MENU_PLAYBACK_SLIDESHOW_FILE_STILL_EN)
    SLIDESHOW_FILE_STILL,
#endif
#if (MENU_PLAYBACK_SLIDESHOW_FILE_MOVIE_EN)
    SLIDESHOW_FILE_MOVIE,
#endif

    SLIDESHOW_FILE_NUM,

#if (!MENU_PLAYBACK_SLIDESHOW_FILE_ALL_EN)
    SLIDESHOW_FILE_ALL,
#endif
#if (!MENU_PLAYBACK_SLIDESHOW_FILE_STILL_EN)
    SLIDESHOW_FILE_STILL,
#endif
#if (!MENU_PLAYBACK_SLIDESHOW_FILE_MOVIE_EN)
    SLIDESHOW_FILE_MOVIE,
#endif

    SLIDESHOW_FILE_DEFAULT = 0
}SLIDESHOWFILE_SETTING;

typedef enum{
#if (MENU_PLAYBACK_SLIDESHOW_EFFECT_SIMPLE_EN)
    SLIDESHOW_EFFECT_SIMPLE,
#endif
#if (MENU_PLAYBACK_SLIDESHOW_EFFECT_NOSTALGIC_EN)
    SLIDESHOW_EFFECT_NOSTALGIC,
#endif
#if (MENU_PLAYBACK_SLIDESHOW_EFFECT_STYLISH_EN)
    SLIDESHOW_EFFECT_STYLISH,
#endif
#if (MENU_PLAYBACK_SLIDESHOW_EFFECT_ACTIVE_EN)
    SLIDESHOW_EFFECT_ACTIVE,
#endif

    SLIDESHOW_EFFECT_NUM,

#if (!MENU_PLAYBACK_SLIDESHOW_EFFECT_SIMPLE_EN)
    SLIDESHOW_EFFECT_SIMPLE,
#endif
#if (!MENU_PLAYBACK_SLIDESHOW_EFFECT_NOSTALGIC_EN)
    SLIDESHOW_EFFECT_NOSTALGIC,
#endif
#if (!MENU_PLAYBACK_SLIDESHOW_EFFECT_STYLISH_EN)
    SLIDESHOW_EFFECT_STYLISH,
#endif
#if (!MENU_PLAYBACK_SLIDESHOW_EFFECT_ACTIVE_EN)
    SLIDESHOW_EFFECT_ACTIVE,
#endif

    SLIDESHOW_EFFECT_DEFAULT = 0
}SLIDESHOWEFFECT_SETTING;

typedef enum{
#if (MENU_PLAYBACK_SLIDESHOW_MUSIC_ON_EN)
    SLIDESHOW_MUSIC_ON,
#endif
#if (MENU_PLAYBACK_SLIDESHOW_MUSIC_OFF_EN)
    SLIDESHOW_MUSIC_OFF,
#endif

    SLIDESHOW_MUSIC_NUM,

#if (!MENU_PLAYBACK_SLIDESHOW_MUSIC_ON_EN)
    SLIDESHOW_MUSIC_ON,
#endif
#if (!MENU_PLAYBACK_SLIDESHOW_MUSIC_OFF_EN)
    SLIDESHOW_MUSIC_OFF,
#endif

    SLIDESHOW_MUSIC_DEFAULT = 0
}SLIDESHOWMUSIC_SETTING;

typedef enum{
    FILEEDIT_DELETE,
    FILEEDIT_PROTECT,
    FILEEDIT_NUM,
    FILEEDIT_DEFAULT = 0
}FILEEDIT_SETUP;

typedef enum{
	BATTERY_VOLTAGE_EMPTY = 0,
    BATTERY_VOLTAGE_LOW,
    BATTERY_VOLTAGE_LEVEL_0,
    BATTERY_VOLTAGE_LEVEL_1,
    BATTERY_VOLTAGE_LEVEL_2,
    BATTERY_VOLTAGE_FULL,
    BATTERY_VOLTAGE_NUM,
    BATTERY_VOLTAGE_DEFAULT = BATTERY_VOLTAGE_FULL,
    // Special level
    BATTERY_VOLTAGE_CHARGING,
    BATTERY_VOLTAGE_LEVEL_3,    // For WiFi compiler issue

	END_OF_BATTERY_VOLTAGE
}BATTERY_VOLTAGE;

typedef enum{
#if (MENU_MOVIE_SOUND_RECORD_ON_EN)
	MOVIE_SOUND_RECORD_ON,
#endif
#if (MENU_MOVIE_SOUND_RECORD_OFF_EN)
	MOVIE_SOUND_RECORD_OFF,
#endif

	MOVIE_SOUND_RECORD_NUM,

#if (!MENU_MOVIE_SOUND_RECORD_ON_EN)
	MOVIE_SOUND_RECORD_ON,
#endif
#if (!MENU_MOVIE_SOUND_RECORD_OFF_EN)
	MOVIE_SOUND_RECORD_OFF,
#endif

    MOVIE_SOUND_RECORD_DEFAULT = 0
}MOVIE_SOUND_RECORD;

typedef enum{
#if (MENU_MOVIE_POWER_OFF_DELAY_0SEC_EN)
	MOVIE_POWEROFF_TIME_0MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_5SEC_EN)
	MOVIE_POWEROFF_TIME_5SEC,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_10SEC_EN)
	MOVIE_POWEROFF_TIME_10SEC,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_15SEC_EN)
	MOVIE_POWEROFF_TIME_15SEC,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_30SEC_EN)
	MOVIE_POWEROFF_TIME_30SEC,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_1MIN_EN)
	MOVIE_POWEROFF_TIME_1MIN,
    MOVIE_POWEROFF_TIME_60SEC = MOVIE_POWEROFF_TIME_1MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_2MIN_EN)
    MOVIE_POWEROFF_TIME_2MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_3MIN_EN)
    MOVIE_POWEROFF_TIME_3MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_5MIN_EN)
    MOVIE_POWEROFF_TIME_5MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_10MIN_EN)
    MOVIE_POWEROFF_TIME_10MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_15MIN_EN)
    MOVIE_POWEROFF_TIME_15MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_30MIN_EN)
    MOVIE_POWEROFF_TIME_30MIN,
#endif
#if (MENU_MOVIE_POWER_OFF_DELAY_60MIN_EN)
    MOVIE_POWEROFF_TIME_60MIN,
#endif

	MOVIE_POWEROFF_TIME_NUM,

#if (!MENU_MOVIE_POWER_OFF_DELAY_0SEC_EN)
	MOVIE_POWEROFF_TIME_0MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_5SEC_EN)
	MOVIE_POWEROFF_TIME_5SEC,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_10SEC_EN)
	MOVIE_POWEROFF_TIME_10SEC,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_15SEC_EN)
	MOVIE_POWEROFF_TIME_15SEC,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_30SEC_EN)
	MOVIE_POWEROFF_TIME_30SEC,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_1MIN_EN)
	MOVIE_POWEROFF_TIME_1MIN,
    MOVIE_POWEROFF_TIME_60SEC = MOVIE_POWEROFF_TIME_1MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_2MIN_EN)
    MOVIE_POWEROFF_TIME_2MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_3MIN_EN)
    MOVIE_POWEROFF_TIME_3MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_5MIN_EN)
    MOVIE_POWEROFF_TIME_5MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_10MIN_EN)
    MOVIE_POWEROFF_TIME_10MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_15MIN_EN)
    MOVIE_POWEROFF_TIME_15MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_30MIN_EN)
    MOVIE_POWEROFF_TIME_30MIN,
#endif
#if (!MENU_MOVIE_POWER_OFF_DELAY_60MIN_EN)
    MOVIE_POWEROFF_TIME_60MIN,
#endif

    MOVIE_POWEROFF_TIME_DEFAULT = 0
}MOVIE_POWEROFF_TIME;

typedef enum{
	#if (MENU_GENERAL_FLICKER_50HZ_EN)
		FLICKER_50HZ  ,
	#endif
	#if (MENU_GENERAL_FLICKER_60HZ_EN)
		FLICKER_60HZ  ,
	#endif

	FLICKER_NUM,

	#if (!MENU_GENERAL_FLICKER_50HZ_EN)
		FLICKER_50HZ  ,
	#endif
	#if (!MENU_GENERAL_FLICKER_60HZ_EN)
		FLICKER_60HZ  ,
	#endif

    FLICKER_DEFAULT = 0
}FLICKER_HZ;

typedef enum{
	LCD_ROTATE_ON  = 0,
	LCD_ROTATE_OFF  ,
	LCD_ROTATE_NUM ,
    LCD_ROTATE_DEFAULT = 0
}LCD_ROTATE;

typedef enum{
	REARCAM_MIRROR_ON  = 0,
	REARCAM_MIRROR_OFF  ,
	REARCAM_MIRROR_NUM ,
    REARCAM_MIRROR_DEFAULT = 1
}REARCAM_MIRROR;

typedef enum{
#if (MENU_GENERAL_USB_FUNCTION_MSDC_EN)
	MENU_SETTING_USB_MSDC  ,
#endif
#if (MENU_GENERAL_USB_FUNCTION_PCAM_EN)
	MENU_SETTING_USB_PCAM  ,
#endif

	MENU_SETTING_USB_NUM   ,

#if (!MENU_GENERAL_USB_FUNCTION_MSDC_EN)
	MENU_SETTING_USB_MSDC  ,
#endif
#if (!MENU_GENERAL_USB_FUNCTION_PCAM_EN)
	MENU_SETTING_USB_PCAM  ,
#endif

    MENU_SETTING_USB_DEFAULT = 0
}MENU_SETTING_USB_FUNCTION;

typedef enum{
#if (MENU_MOVIE_CLIP_TIME_OFF_EN)
	MOVIE_CLIP_TIME_OFF,
#endif
#if (MENU_MOVIE_CLIP_TIME_6SEC_EN)
    MOVIE_CLIP_TIME_6SEC,
#endif
#if (MENU_MOVIE_CLIP_TIME_1MIN_EN)
    MOVIE_CLIP_TIME_1MIN,
#endif
#if (MENU_MOVIE_CLIP_TIME_2MIN_EN)
    MOVIE_CLIP_TIME_2MIN,
#endif
#if (MENU_MOVIE_CLIP_TIME_3MIN_EN)
	MOVIE_CLIP_TIME_3MIN,
#endif
#if (MENU_MOVIE_CLIP_TIME_5MIN_EN)
    MOVIE_CLIP_TIME_5MIN,
#endif
#if (MENU_MOVIE_CLIP_TIME_10MIN_EN)
    MOVIE_CLIP_TIME_10MIN,
#endif
#if (MENU_MOVIE_CLIP_TIME_25MIN_EN)
    MOVIE_CLIP_TIME_25MIN,
#endif
#if (MENU_MOVIE_CLIP_TIME_30MIN_EN)
    MOVIE_CLIP_TIME_30MIN,
#endif

	MOVIE_CLIP_TIME_NUM,

#if !(MENU_MOVIE_CLIP_TIME_OFF_EN)
	MOVIE_CLIP_TIME_OFF,
#endif
#if !(MENU_MOVIE_CLIP_TIME_6SEC_EN)
    MOVIE_CLIP_TIME_6SEC,
#endif
#if !(MENU_MOVIE_CLIP_TIME_1MIN_EN)
    MOVIE_CLIP_TIME_1MIN,
#endif
#if !(MENU_MOVIE_CLIP_TIME_2MIN_EN)
    MOVIE_CLIP_TIME_2MIN,
#endif
#if !(MENU_MOVIE_CLIP_TIME_3MIN_EN)
	MOVIE_CLIP_TIME_3MIN,
#endif
#if !(MENU_MOVIE_CLIP_TIME_5MIN_EN)
    MOVIE_CLIP_TIME_5MIN,
#endif
#if !(MENU_MOVIE_CLIP_TIME_10MIN_EN)
    MOVIE_CLIP_TIME_10MIN,
#endif
#if !(MENU_MOVIE_CLIP_TIME_25MIN_EN)
    MOVIE_CLIP_TIME_25MIN,
#endif
#if !(MENU_MOVIE_CLIP_TIME_30MIN_EN)
    MOVIE_CLIP_TIME_30MIN,
#endif

    MOVIE_CLIP_TIME_DEFAULT = 0
}MOVIE_CLIPTIME;

typedef enum{
#if (MENU_MOVIE_NIGHT_MODE_ON_EN)
    MOVIE_NIGHT_MODE_ON = COMMON_NIGHT_MODE_EN_ON,
#endif
#if (MENU_MOVIE_NIGHT_MODE_OFF_EN)
    MOVIE_NIGHT_MODE_OFF = COMMON_NIGHT_MODE_EN_OFF,
#endif

    MOVIE_NIGHT_MODE_NUM,

#if (!MENU_MOVIE_NIGHT_MODE_ON_EN)
    MOVIE_NIGHT_MODE_ON,
#endif
#if (!MENU_MOVIE_NIGHT_MODE_OFF_EN)
    MOVIE_NIGHT_MODE_OFF,
#endif
    MOVIE_NIGHT_MODE_DEFAULT = 0
}MOVIE_NIGHT_MODE;

typedef enum{
#if (MENU_GENERAL_LCD_POWER_SAVE_OFF_EN)
	LCD_POWER_SAVE_OFF,
#endif
#if (MENU_GENERAL_LCD_POWER_SAVE_10SEC_EN)
	LCD_POWER_SAVE_10SEC,
#endif
#if (MENU_GENERAL_LCD_POWER_SAVE_30SEC_EN)
	LCD_POWER_SAVE_30SEC,
#endif
#if (MENU_GENERAL_LCD_POWER_SAVE_1MIN_EN)
	LCD_POWER_SAVE_1MIN,
#endif
#if (MENU_GENERAL_LCD_POWER_SAVE_3MIN_EN)
	LCD_POWER_SAVE_3MIN,
#endif

	LCD_POWER_SAVE_NUM,

#if (!MENU_GENERAL_LCD_POWER_SAVE_OFF_EN)
	LCD_POWER_SAVE_OFF,
#endif
#if (!MENU_GENERAL_LCD_POWER_SAVE_10SEC_EN)
	LCD_POWER_SAVE_10SEC,
#endif
#if (!MENU_GENERAL_LCD_POWER_SAVE_30SEC_EN)
	LCD_POWER_SAVE_30SEC,
#endif
#if (!MENU_GENERAL_LCD_POWER_SAVE_1MIN_EN)
	LCD_POWER_SAVE_1MIN,
#endif
#if (!MENU_GENERAL_LCD_POWER_SAVE_3MIN_EN)
	LCD_POWER_SAVE_3MIN,
#endif

    LCD_POWER_SAVE_DEFAULT = 0
}LCD_PowerSave;

typedef enum{
#if (MENU_GENERAL_GSENSOR_OFF_EN)
	GSENSOR_SENSITIVITY_OFF,
#endif
#if (MENU_GENERAL_GSENSOR_LEVEL0_EN)
	GSENSOR_SENSITIVITY_L0,
#endif
#if (MENU_GENERAL_GSENSOR_LEVEL1_EN)
	GSENSOR_SENSITIVITY_L1,
#endif
#if (MENU_GENERAL_GSENSOR_LEVEL2_EN)
	GSENSOR_SENSITIVITY_L2,
#endif
#if (MENU_GENERAL_GSENSOR_LEVEL3_EN)
	GSENSOR_SENSITIVITY_L3,
#endif
#if (MENU_GENERAL_GSENSOR_LEVEL4_EN)
	GSENSOR_SENSITIVITY_L4,
#endif

	GSENSOR_SENSITIVITY_NUM,

#if (!MENU_GENERAL_GSENSOR_OFF_EN)
	GSENSOR_SENSITIVITY_OFF,
#endif
#if (!MENU_GENERAL_GSENSOR_LEVEL0_EN)
	GSENSOR_SENSITIVITY_L0,
#endif
#if (!MENU_GENERAL_GSENSOR_LEVEL1_EN)
	GSENSOR_SENSITIVITY_L1,
#endif
#if (!MENU_GENERAL_GSENSOR_LEVEL2_EN)
	GSENSOR_SENSITIVITY_L2,
#endif
#if (!MENU_GENERAL_GSENSOR_LEVEL3_EN)
	GSENSOR_SENSITIVITY_L3,
#endif
#if (!MENU_GENERAL_GSENSOR_LEVEL4_EN)
	GSENSOR_SENSITIVITY_L4,
#endif

    GSENSOR_SENSITIVITY_DEFAULT = 0
}GSENSOR_SENSITIVITY;

typedef enum{
#if (MENU_GENERAL_POWERON_GSENSOR_OFF_EN)
	GSENSOR_POWERON_SENSITIVITY_OFF,
#endif
#if (MENU_GENERAL_POWER_ON_GSENSOR_LEVEL0_EN)
	GSENSOR_POWERON_SENSITIVITY_L0,
#endif
#if (MENU_GENERAL_POWER_ON_GSENSOR_LEVEL1_EN)
	GSENSOR_POWERON_SENSITIVITY_L1,
#endif
#if (MENU_GENERAL_POWER_ON_GSENSOR_LEVEL2_EN)
	GSENSOR_POWERON_SENSITIVITY_L2,
#endif

	GSENSOR_POWERON_SENSITIVITY_NUM,

#if (!MENU_GENERAL_POWERON_GSENSOR_OFF_EN)
	GSENSOR_POWERON_SENSITIVITY_OFF,
#endif
#if (!MENU_GENERAL_POWER_ON_GSENSOR_LEVEL0_EN)
	GSENSOR_POWERON_SENSITIVITY_L0,
#endif
#if (!MENU_GENERAL_POWER_ON_GSENSOR_LEVEL1_EN)
	GSENSOR_POWERON_SENSITIVITY_L1,
#endif
#if (!MENU_GENERAL_POWER_ON_GSENSOR_LEVEL2_EN)
	GSENSOR_POWERON_SENSITIVITY_L2,
#endif

    GSENSOR_POWERON_SENSITIVITY_DEFAULT = 0
}GSENSOR_POWERON_SENSITIVITY;


typedef enum{
#if (MENU_GENERAL_FLASH_LED_ON_EN)
	LED_FALSH_ON,
#endif
#if (MENU_GENERAL_FLASH_LED_OFF_EN)
	LED_FALSH_OFF,
#endif

	LED_FLASH_NUM,

#if (!MENU_GENERAL_FLASH_LED_ON_EN)
	LED_FALSH_ON  = 0,
#endif
#if (!MENU_GENERAL_FLASH_LED_OFF_EN)
	LED_FALSH_OFF,
#endif

    LED_FALSH_DEFAULT = 0
}LED_Flash;

typedef enum{
    CHARGER_POWER_OFF_TIME_5SEC,
    CHARGER_POWER_OFF_TIME_15SEC,
    CHARGER_POWER_OFF_TIME_30SEC,
    CHARGER_POWER_OFF_TIME_1MIN,
    CHARGER_POWER_OFF_TIME_NUM,
    CHARGER_POWER_OFF_TIME_DEFAULT = CHARGER_POWER_OFF_TIME_5SEC
}CHARGER_POWER_OFF_TIME;

typedef enum{
	TIMEZONE_GMT_M_12,  //00:0x00
	TIMEZONE_GMT_M_11,  
	TIMEZONE_GMT_M_10,
	TIMEZONE_GMT_M_9,
	TIMEZONE_GMT_M_8,
	TIMEZONE_GMT_M_7,   //05:0x05
	TIMEZONE_GMT_M_6,
	TIMEZONE_GMT_M_5,
	TIMEZONE_GMT_M_4,
	TIMEZONE_GMT_M_3_30,
	TIMEZONE_GMT_M_3,   //10:0x0A
	TIMEZONE_GMT_M_2,
	TIMEZONE_GMT_M_1,
	TIMEZONE_GMT,
	TIMEZONE_GMT_P_1,
	TIMEZONE_GMT_P_2,   //15:0x0F
	TIMEZONE_GMT_P_3,
	TIMEZONE_GMT_P_3_30,
	TIMEZONE_GMT_P_4,
	TIMEZONE_GMT_P_4_30,
	TIMEZONE_GMT_P_5,   //20:0x14
	TIMEZONE_GMT_P_5_30,
	TIMEZONE_GMT_P_5_45,
	TIMEZONE_GMT_P_6,
	TIMEZONE_GMT_P_6_30,
	TIMEZONE_GMT_P_7,   //25:0x19
	TIMEZONE_GMT_P_8,
	TIMEZONE_GMT_P_9,
	TIMEZONE_GMT_P_9_30,
	TIMEZONE_GMT_P_10,
	TIMEZONE_GMT_P_11,  //30:0x1E
	TIMEZONE_GMT_NUM,
	TIMEZONE_GMT_OFF,
	TIMEZONE_GMT_DEFAULT = TIMEZONE_GMT_P_8
}TIMEZONE_GMT_LIST;

typedef enum{
#if (MENU_GENERAL_MOTION_DTC_OFF_EN)
	MOTION_DTC_SENSITIVITY_OFF,
#endif
#if (MENU_GENERAL_MOTION_DTC_LOW_EN)
	MOTION_DTC_SENSITIVITY_LOW,
#endif
#if (MENU_GENERAL_MOTION_DTC_MID_EN)
	MOTION_DTC_SENSITIVITY_MID,
#endif
#if (MENU_GENERAL_MOTION_DTC_HIGH_EN)
	MOTION_DTC_SENSITIVITY_HIGH,
#endif

	MOTION_DTC_SENSITIVITY_NUM,

#if (!MENU_GENERAL_MOTION_DTC_OFF_EN)
	MOTION_DTC_SENSITIVITY_OFF,
#endif
#if (!MENU_GENERAL_MOTION_DTC_LOW_EN)
	MOTION_DTC_SENSITIVITY_LOW,
#endif
#if (!MENU_GENERAL_MOTION_DTC_MID_EN)
	MOTION_DTC_SENSITIVITY_MID,
#endif
#if (!MENU_GENERAL_MOTION_DTC_HIGH_EN)
	MOTION_DTC_SENSITIVITY_HIGH,
#endif

    MOTION_DTC_SENSITIVITY_DEFAULT = 0
}MOTION_DTC_SENSITIVITY;

typedef enum{
#if (MENU_MOVIE_VMD_REC_TIME_5SEC_EN)
	VMD_REC_TIME_5SEC,
#endif
#if (MENU_MOVIE_VMD_REC_TIME_10SEC_EN)
	VMD_REC_TIME_10SEC,
#endif
#if (MENU_MOVIE_VMD_REC_TIME_30SEC_EN)
	VMD_REC_TIME_30SEC,
#endif
#if (MENU_MOVIE_VMD_REC_TIME_1MIN_EN)
	VMD_REC_TIME_1MIN,
#endif

	VMD_REC_TIME_NUM,

#if (!MENU_MOVIE_VMD_REC_TIME_5SEC_EN)
	VMD_REC_TIME_5SEC,
#endif
#if (!MENU_MOVIE_VMD_REC_TIME_10SEC_EN)
	VMD_REC_TIME_10SEC,
#endif
#if (!MENU_MOVIE_VMD_REC_TIME_30SEC_EN)
	VMD_REC_TIME_30SEC,
#endif
#if (!MENU_MOVIE_VMD_REC_TIME_1MIN_EN)
	VMD_REC_TIME_1MIN,
#endif

    VMD_REC_TIME_DEFAULT = 0
}VMD_REC_TIME;

typedef enum{
	AUTO_REC_ON,
	AUTO_REC_OFF,
	AUTO_REC_NUM,
	AUTO_REC_DEFAULT = AUTO_REC_ON
} AUTO_REC_ENUM;

typedef enum{
#if (MENU_STILL_VMD_SHOT_NUM_1P_EN)
	VMD_SHOT_NUM_1P,
#endif
#if (MENU_STILL_VMD_SHOT_NUM_2P_EN)
	VMD_SHOT_NUM_2P,
#endif
#if (MENU_STILL_VMD_SHOT_NUM_3P_EN)
	VMD_SHOT_NUM_3P,
#endif
#if (MENU_STILL_VMD_SHOT_NUM_5P_EN)
	VMD_SHOT_NUM_5P,
#endif

	VMD_SHOT_NUM_NUM,

#if (!MENU_STILL_VMD_SHOT_NUM_1P_EN)
	VMD_SHOT_NUM_1P,
#endif
#if (!MENU_STILL_VMD_SHOT_NUM_2P_EN)
	VMD_SHOT_NUM_2P,
#endif
#if (!MENU_STILL_VMD_SHOT_NUM_3P_EN)
	VMD_SHOT_NUM_3P,
#endif
#if (!MENU_STILL_VMD_SHOT_NUM_5P_EN)
	VMD_SHOT_NUM_5P,
#endif

    VMD_SHOT_NUM_DEFAULT = 0
}VMD_SHOT_NUM;

typedef enum{
#if (MENU_GENERAL_BOOT_UP_VR_MODE_EN)
	BOOT_UP_MODE_DVR,
#endif
#if (MENU_GENERAL_BOOT_UP_DSC_MODE_EN)
	BOOT_UP_MODE_DSC,
#endif
#if (MENU_GENERAL_BOOT_UP_BURST_MODE_EN)
	BOOT_UP_MODE_BURST,
#endif
#if (MENU_GENERAL_BOOT_UP_TIMELAPSE_MODE_EN)
	BOOT_UP_MODE_TIMELAPSE,
#endif

	BOOT_UP_MODE_NUM,

#if (!MENU_GENERAL_BOOT_UP_VR_MODE_EN)
	BOOT_UP_MODE_DVR,
#endif
#if (!MENU_GENERAL_BOOT_UP_DSC_MODE_EN)
	BOOT_UP_MODE_DSC,
#endif
#if (!MENU_GENERAL_BOOT_UP_BURST_MODE_EN)
	BOOT_UP_MODE_BURST,
#endif
#if (!MENU_GENERAL_BOOT_UP_TIMELAPSE_MODE_EN)
	BOOT_UP_MODE_TIMELAPSE,
#endif

    BOOT_UP_MODE_DEFAULT = 0
}BOOT_UP_UI_MODE;

typedef enum{
#if (MENU_STILL_TIMELAPSE_TIME1_EN)
	TIMELAPSE_INTERVAL_1,
#endif
#if (MENU_STILL_TIMELAPSE_TIME2_EN)
	TIMELAPSE_INTERVAL_2,
#endif
#if (MENU_STILL_TIMELAPSE_TIME3_EN)
	TIMELAPSE_INTERVAL_3,
#endif
#if (MENU_STILL_TIMELAPSE_TIME4_EN)
	TIMELAPSE_INTERVAL_4,
#endif
#if (MENU_STILL_TIMELAPSE_TIME5_EN)
	TIMELAPSE_INTERVAL_5,
#endif
#if (MENU_STILL_TIMELAPSE_TIME6_EN)
	TIMELAPSE_INTERVAL_6,
#endif
#if (MENU_STILL_TIMELAPSE_TIME7_EN)
	TIMELAPSE_INTERVAL_7,
#endif

	TIMELAPSE_INTERVAL_NUM,

#if (!MENU_STILL_TIMELAPSE_TIME1_EN)
	TIMELAPSE_INTERVAL_1,
#endif
#if (!MENU_STILL_TIMELAPSE_TIME2_EN)
	TIMELAPSE_INTERVAL_2,
#endif
#if (!MENU_STILL_TIMELAPSE_TIME3_EN)
	TIMELAPSE_INTERVAL_3,
#endif
#if (!MENU_STILL_TIMELAPSE_TIME4_EN)
	TIMELAPSE_INTERVAL_4,
#endif
#if (!MENU_STILL_TIMELAPSE_TIME5_EN)
	TIMELAPSE_INTERVAL_5,
#endif
#if (!MENU_STILL_TIMELAPSE_TIME6_EN)
	TIMELAPSE_INTERVAL_6,
#endif
#if (!MENU_STILL_TIMELAPSE_TIME7_EN)
	TIMELAPSE_INTERVAL_7,
#endif

    TIMELAPSE_INTERVAL_DEFAULT = 0
}TIMELAPSE_INTERVAL;

typedef enum {   // TBD
	TIMELAPSE_INTERVAL_5_SEC,
    TIMELAPSE_INTERVAL_10_SEC,
    TIMELAPSE_INTERVAL_30_SEC,
    TIMELAPSE_INTERVAL_60_SEC,
	TIMELAPSE_INTERVAL_NUM_,

    TIMELAPSE_INTERVAL_DEFAULT_ = 0
} DSC_TIMELAPSE_INTERVAL_;

typedef enum {  
    PRJ_VR_TIMELAPSE_OFF,
    PRJ_VR_TIMELAPSE_1SEC,
    PRJ_VR_TIMELAPSE_5SEC,
    PRJ_VR_TIMELAPSE_10SEC,
    PRJ_VR_TIMELAPSE_30SEC,
    PRJ_VR_TIMELAPSE_60SEC,
    PRJ_VR_TIMELAPSE_NUM,

    PRJ_VR_TIMELAPSE_DEFAULT = 0
} PRJ_VR_TIMELAPSE_SETTING;

typedef enum{
#if (MENU_GENERAL_GPS_STAMP_ON_EN)
    GPS_STAMP_ON,
#endif
#if (MENU_GENERAL_GPS_STAMP_OFF_EN)
    GPS_STAMP_OFF,
#endif

    GPS_STAMP_NUM,

#if (!MENU_GENERAL_GPS_STAMP_ON_EN)
    GPS_STAMP_ON,
#endif
#if (!MENU_GENERAL_GPS_STAMP_OFF_EN)
    GPS_STAMP_OFF,
#endif

    GPS_STAMP_DEFAULT = 0
}GPS_STAMP_SETTING;

typedef enum{
    RECODE_GPS_IN_LOG_VIDEO  = 0,
    RECODE_GPS_IN_VIDEO,
    RECODE_GPS_IN_LOG,
    RECODE_GPS_OFF,
    RECODE_GPS_NUM,
    RECODE_GPS_DEFAULT = 0
} RECODE_GPS_SETTING;

typedef enum{
#if (MENU_GENERAL_SPEED_STAMP_ON_EN)
    SPEED_STAMP_ON,
#endif
#if (MENU_GENERAL_SPEED_STAMP_OFF_EN)
    SPEED_STAMP_OFF,
#endif

    SPEED_STAMP_NUM,

#if (!MENU_GENERAL_SPEED_STAMP_ON_EN)
    SPEED_STAMP_ON,
#endif
#if (!MENU_GENERAL_SPEED_STAMP_OFF_EN)
    SPEED_STAMP_OFF,
#endif
    SPEED_STAMP_DEFAULT = 0
}SPEED_STAMP_SETTING;

typedef enum{
#if (MENU_GENERAL_WIFI_ON_EN)
	WIFI_MODE_ON,
#endif
#if (MENU_GENERAL_WIFI_OFF_EN)
	WIFI_MODE_OFF,
#endif

	WIFI_MODE_NUM,

#if (!MENU_GENERAL_WIFI_ON_EN)
	WIFI_MODE_ON,
#endif
#if (!MENU_GENERAL_WIFI_OFF_EN)
	WIFI_MODE_OFF,
#endif

    WIFI_MODE_DEFAULT = 0
}WIFI_MODE;

//Andy Liu for WiFi code base.
typedef enum{
    IMAGE_UPSIDE_DOWN_NORMAL = 0,
    IMAGE_UPSIDE_DOWN_UPSIDE_DOWN,
    IMAGE_UPSIDE_DOWN_MIRROR,
    IMAGE_UPSIDE_DOWN_COLROW,
    IMAGE_UPSIDE_DOWN_NUM
}IMAGE_UPSIDE_DOWN;

typedef enum{
    STATUS_LIGHT_OFF = 0,
    STATUS_LIGHT_ON,
    STATUS_LIGHT_NUM
}STATUS_LIGHT;

// Use for WIFI.
typedef enum{
    MENU_SETTING_TYPE_NONE = 0,
    MENU_SETTING_TYPE_CAMERA_SETTING,
    MENU_SETTING_TYPE_CAPTURE_SETTING,   
    MENU_SETTING_TYPE_SETUP,
    MENU_SETTING_TYPE_USB
}MENU_SETTING_TYPE;

typedef enum{
    CAMERA_SETTING_STATE_VIDEO_SIZE = 0,
    CAMERA_SETTING_STATE_PHOTO_SIZE,   
    CAMERA_SETTING_STATE_PHOTO_BURST,
    CAMERA_SETTING_STATE_TIME_LAPSE,
    CAMERA_SETTING_STATE_CAPTURE_SETTINGS,
    CAMERA_SETTING_STATE_SETUP,
    CAMERA_SETTING_STATE_WIRELESS_CONTROL,
    CAMERA_SETTING_STATE_DELETE,
    CAMERA_SETTING_STATE_EXIT,
    CAMERA_SETTING_STATE_OPTION_NUM
}CAMERA_SETTING_STATE;

typedef enum{
    CAPTURE_SETTING_STATE_UPSIDE_DOWN = 0,
    CAPTURE_SETTING_STATE_SPOT_METER,
    CAPTURE_SETTING_STATE_LOOPING_VIDEO,
    CAPTURE_SETTING_STATE_WHITE_BALANCE,
    CAPTURE_SETTING_STATE_HDR,
    CAPTURE_SETTING_STATE_EXIT,
    CAPTURE_SETTING_STATE_OPTION_NUM
}CAPTURE_SETTING_STATE;

typedef enum{
    SETUP_STATE_DEFAULT_MODE = 0,
    SETUP_STATE_Q_SHOT,
    SETUP_STATE_STATUS_LIGHTS,
    SETUP_STATE_SOUND_INDICATOR,
    SETUP_STATE_POWER_SAVING,
    SETUP_STATE_LANGUAGE,
    SETUP_STATE_DATE_TIME,
    SETUP_STATE_SYS_INFO,
    SETUP_STATE_EXIT,
    SETUP_STATE_OPTION_NUM
}SETUP_STATE;

typedef enum{
    REMIND_LDWS_ON = 0,
    REMIND_LDWS_OFF,
    REMIND_LDWS_NUM,
	REMIND_LDWS_DEFAULT = REMIND_LDWS_OFF
}REMIND_LDWS_MODE;
typedef enum{
    REMIND_FCWS_ON = 0,
    REMIND_FCWS_OFF,
    REMIND_FCWS_NUM,
	REMIND_FCWS_DEFAULT = REMIND_FCWS_OFF
}REMIND_FCWS_MODE;
/*===========================================================================
 * Function prototype
 *===========================================================================*/

void 	MenuSettingInit(void);
void    SystemSettingInit(void);
void 	FactoryMenuSettingInit(void);
void 	MaxValueForMenuSettingInit(void);
void 	SetCurrentOpMode(OP_MODE_SETTING ubMode);
UINT8 	GetCurrentOpMode(void);
void 	Save2DefaultSetting(void);
void 	Save2FactorySetting(void);
void 	RestoreFromDefaultSetting(void);
void 	RestoreFromFactorySetting(void);
void 	ListCurrentMenuSetting(void);
void 	ListAllMenuSetting(MenuInfo *Info);
pMenuInfo TempMenuConfig(void);
pMenuInfo MenuSettingConfig(void);
pSystemInfo SystemSettingConfig(void);
pMenuInfo DefaultMenuSettingConfig(void);
pMenuInfo FactoryMenuSettingConfig(void);
pMenuInfo MaxValueMenuSettingConfig(void);
void 	CurrentMenuClear(void);
void 	DefaultMenuClear(void);
void 	FactoryMenuClear(void);
void 	SetSystemResetFlag(UINT8 bflag);
UINT8 	GetSystemResetFlag(void);
void 	CheckMenuValueValid(MenuInfo *Info);
void	VideoFunc_SetResolution(MOVIESIZE_SETTING ubResolution);
AHC_BOOL Menu_Setting_Set_MicSensitivity(UINT8 val);

int		Setpf_WiFi(int value);
int		Getpf_WiFi(void);
void ResetDefaultSetting(void);//leo20180630

int		pf_LDWS_EnGet(void);
int     pf_LDWS_EnSet(AHC_BOOL value);
int		pf_FCWS_EnGet(void);
int     pf_FCWS_EnSet(AHC_BOOL value);
int		pf_SAG_EnGet(void);
int     pf_SAG_EnSet(AHC_BOOL value);
int 	pf_HDR_EnGet(void);
int 	pf_HDR_EnSet(AHC_BOOL value);
int     pf_WNR_EnGet(void);
int     pf_WNR_EnSet(AHC_BOOL value);
int     pf_NightMode_EnGet(void);
int     pf_NightMode_EnSet(AHC_BOOL value);
int		pf_RearCamType_EnGet(void);
int 	pf_RearCamType_EnSet(int value);
int 	pf_SLOWMOTION_EnGet(void);
int 	pf_SLOWMOTION_EnSet(SLOWMOTION_SETTING value);
void 	SetSlowMotionX(SLOWMOTION_SETTING ubSM);

AHC_BOOL AHC_Menu_SettingSetCB( char *cmenu_string, ... );
AHC_BOOL AHC_Menu_SettingGetCB( char *cmenu_string, ... );

AHC_BOOL Menu_Setting_CheckMenuAtoms(void);
void     Menu_Setting_BackupMenuAtoms(void);

int      pf_General_EnSet(char *itemKey, INT32 value);
int      pf_General_EnGet(char *itemKey, INT32 *value);

void    MenuSettingConfirm( MENU_SETTING_TYPE byMenuSettingType, UINT8 byOption, UINT8 bySubOption);


#endif  // _MENUSETTING_H_
